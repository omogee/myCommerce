{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mainprogram\\\\ogbmain\\\\src\\\\components\\\\Autocomplete.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get('http://localhost:5000/suggestion').then(res => {\n        this.setState({\n          suggestions: res.data\n        });\n      }).catch(err => console.warn(err));\n    };\n\n    this.onChange = e => {\n      const suggestions = this.state.suggestions;\n      const userInput = e.currentTarget.value;\n      var filteredSuggestions = [];\n\n      for (var i = 0; i < suggestions.length; i++) {\n        if (suggestions[i].name.toLowerCase().indexOf(userInput.toLowerCase()) > -1) {\n          const mainname = suggestions[i].name;\n          const mainprice = suggestions[i].price;\n          const mainimage = suggestions[i].description;\n          filteredSuggestions.push({\n            mainname,\n            mainprice,\n            mainimage\n          });\n        }\n      }\n\n      console.log(filteredSuggestions);\n      this.setState({\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.state = {\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n      suggestions: [],\n      colour: 'white'\n    };\n  }\n\n  render() {\n    let suggestionsListComponent;\n\n    if (this.state.showSuggestions && this.state.userInput) {\n      if (this.state.filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, this.state.filteredSuggestions.map((suggestion, index) => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            style: {\n              listStyleType: 'none'\n            },\n            key: suggestion.mainprice,\n            onClick: this.onClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              width: '5%'\n            },\n            src: require(`../${suggestion.mainimage}.jpg`),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }\n          }), suggestion.mainname), \" \", /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 127\n            }\n          }), /*#__PURE__*/React.createElement(\"center\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(\"small\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 26\n            }\n          }, suggestion.mainprice)));\n        }));\n      } else {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"no-suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, \"No suggestions!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      value: this.state.userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        backgroundColor: 'white',\n        color: `black`,\n        zIndex: '2'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, suggestionsListComponent));\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["C:/Users/user/mainprogram/ogbmain/src/components/Autocomplete.jsx"],"names":["React","Component","axios","Autocomplete","constructor","props","componentDidMount","get","then","res","setState","suggestions","data","catch","err","console","warn","onChange","e","state","userInput","currentTarget","value","filteredSuggestions","i","length","name","toLowerCase","indexOf","mainname","mainprice","price","mainimage","description","push","log","showSuggestions","colour","render","suggestionsListComponent","map","suggestion","index","listStyleType","onClick","width","require","onKeyDown","position","backgroundColor","color","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n class Autocomplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: '',\r\n      suggestions: [],\r\n      colour:'white',\r\n      \r\n         }\r\n    }\r\n    componentDidMount = () =>{\r\n        axios.get('http://localhost:5000/suggestion')\r\n        .then(res => {\r\n            this.setState({suggestions: res.data})\r\n        })\r\n        .catch(err => console.warn(err))\r\n    }\r\n    onChange = (e) => {\r\n        const  suggestions  = this.state.suggestions;\r\n        const userInput = e.currentTarget.value;   \r\n        var filteredSuggestions = [];\r\n        for (var i=0; i<suggestions.length; i++){\r\n          if(suggestions[i].name.toLowerCase().indexOf(userInput.toLowerCase()) > -1){\r\n            const mainname = suggestions[i].name;\r\n            const mainprice = suggestions[i].price;\r\n            const mainimage = suggestions[i].description;\r\n\r\n            filteredSuggestions.push({mainname,mainprice,mainimage})\r\n          }\r\n\r\n        }\r\n console.log(filteredSuggestions)\r\n\r\n        this.setState({\r\n          filteredSuggestions,\r\n          showSuggestions: true,\r\n          userInput: e.currentTarget.value\r\n        });\r\n      };\r\n    render() { \r\n      let suggestionsListComponent;  \r\n    if (this.state.showSuggestions && this.state.userInput) {\r\n      if (this.state.filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul  className=\"suggestions\">\r\n            {this.state.filteredSuggestions.map((suggestion, index) => {\r\n              \r\n              return (\r\n                 <li style={{listStyleType:'none'}}  key={suggestion.mainprice} onClick={this.onClick}>\r\n                 <b><img style={{width:'5%'}} src={require(`../${suggestion.mainimage}.jpg`)}></img>{suggestion.mainname}</b> <br></br>\r\n                 <center><small>{suggestion.mainprice}</small></center>\r\n                 </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n   \r\n        return ( \r\n            <React.Fragment>\r\n               <input\r\n          type=\"text\"\r\n          onChange={this.onChange}\r\n          onKeyDown={this.onKeyDown}\r\n          value={this.state.userInput}\r\n        />\r\n        <div style={{position:\"absolute\",backgroundColor:'white',color:`black`,zIndex:'2'}}>\r\n        {suggestionsListComponent}\r\n        </div>\r\n        \r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}