{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mainprogram\\\\ogbmain\\\\src\\\\navbar.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getfilteredSuggestions } from \"./store\";\nimport axios from 'axios';\nimport { searcher, submitsearcher } from './store';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport queryString from \"query-string\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        inputval: this.props.inputval\n      });\n    };\n\n    this.change2 = e => {\n      this.setState({\n        inputval: e.target.value\n      });\n      const parsedQuery = queryString.parse(this.props.location.search);\n      this.props.searcher(e.target.value);\n      this.props.getfilteredSuggestions(e.target.value);\n\n      if (e.target.value.length === 0) {\n        const url = window.location.href;\n        const uri = url.split(\"?\")[0];\n        window.location.assign(uri);\n      }\n    };\n\n    this.state = {\n      inputval: \"\",\n      showSuggestion: false,\n      filteredSuggestions: [],\n      suggestions: [],\n      searcheddata: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./images/fruget.jpg\"),\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        padding: \"auto\",\n        margin: \"auto\"\n      },\n      className: \"form-control col-10\",\n      value: this.state.inputval,\n      name: \"search\",\n      onChange: this.change2,\n      placeholder: \"Search products here...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n}\n/*\r\n <div>\r\n              <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n  <a className=\"navbar-brand\" ><img src={require (\"./images/fruget.jpg\")} style={{width:\"5%\"}} alt=\"\"/></a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>    \r\n    </ul>\r\n    <form action=\"/search\" method=\"get\" onSubmit={this.submit} className=\"col-8\">\r\n      <input type=\"text\" className=\"form-control col-10\" value={this.state.inputval} name=\"search\" onChange={this.change2} placeholder=\"Search products here...\"/>\r\n    <button type=\"submit\" className=\"col-2\" style={{float:\"right\"}}>Submit</button>\r\n    </form>\r\n  </div>  \r\n</nav>\r\n            </div>\r\n            */\n\n\nconst mapStateToProps = store => {\n  return {\n    products: store.products,\n    searching: store.searching,\n    status: store.status,\n    filteredSuggestions: store.filteredSuggestions,\n    suggestions: store.suggestions,\n    showSuggestions: store.showSuggestions,\n    inputval: store.inputval,\n    searchedproducts: store.searchedproducts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitsearcher: data => dispatch(submitsearcher(data)),\n    searcher: data => dispatch(searcher(data)),\n    getfilteredSuggestions: data => dispatch(getfilteredSuggestions(data))\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(Navbar);","map":{"version":3,"sources":["C:/Users/user/mainprogram/ogbmain/src/navbar.jsx"],"names":["React","Component","getfilteredSuggestions","axios","searcher","submitsearcher","connect","withRouter","compose","queryString","Navbar","constructor","props","componentDidMount","setState","inputval","change2","e","target","value","parsedQuery","parse","location","search","length","url","window","href","uri","split","assign","state","showSuggestion","filteredSuggestions","suggestions","searcheddata","render","require","width","height","padding","margin","mapStateToProps","store","products","searching","status","showSuggestions","searchedproducts","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {getfilteredSuggestions} from \"./store\"\r\nimport axios from 'axios';\r\nimport {searcher, submitsearcher} from './store'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\"\r\nimport queryString from \"query-string\"\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          inputval:\"\",\r\n          showSuggestion:false,\r\n          filteredSuggestions:[],\r\n          suggestions:[],\r\n          searcheddata: []\r\n         }\r\n    }\r\n    componentDidMount = () =>{\r\n      this.setState({inputval:this.props.inputval})\r\n    }\r\n   \r\n    change2 = (e)=>{\r\n      this.setState({inputval:e.target.value})\r\n      const parsedQuery = queryString.parse(this.props.location.search)\r\n      this.props.searcher(e.target.value)\r\n         \r\n     this.props.getfilteredSuggestions(e.target.value)\r\n\r\n     if(e.target.value.length === 0){\r\n     \r\n      const url = window.location.href;\r\n      const uri = url.split(\"?\")[0]\r\n      window.location.assign(uri)\r\n     }\r\n    }\r\n    render() { \r\n    \r\n        return ( \r\n            <div>\r\n                <nav className=\"navbar\">\r\n                <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    <img src={require(\"./images/fruget.jpg\")} style={{width:\"100%\",height:\"100%\"}} alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <center>\r\n                  <input type=\"text\" style={{padding:\"auto\",margin:\"auto\"}} className=\"form-control col-10\" value={this.state.inputval} name=\"search\" onChange={this.change2} placeholder=\"Search products here...\"/>\r\n                  </center>\r\n                  </div>\r\n                  <div>\r\n\r\n                  </div>\r\n              </div>\r\n              </div>\r\n              </nav>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n/*\r\n <div>\r\n              <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n  <a className=\"navbar-brand\" ><img src={require (\"./images/fruget.jpg\")} style={{width:\"5%\"}} alt=\"\"/></a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>    \r\n    </ul>\r\n    <form action=\"/search\" method=\"get\" onSubmit={this.submit} className=\"col-8\">\r\n      <input type=\"text\" className=\"form-control col-10\" value={this.state.inputval} name=\"search\" onChange={this.change2} placeholder=\"Search products here...\"/>\r\n    <button type=\"submit\" className=\"col-2\" style={{float:\"right\"}}>Submit</button>\r\n    </form>\r\n  </div>  \r\n</nav>\r\n            </div>\r\n            */\r\nconst mapStateToProps =(store)=>{\r\n  return{           \r\n     products: store.products,\r\n     searching:store.searching,\r\n     status:store.status,\r\n     filteredSuggestions: store.filteredSuggestions,\r\n     suggestions: store.suggestions,\r\n     showSuggestions: store.showSuggestions,\r\n     inputval: store.inputval,\r\n     searchedproducts:store.searchedproducts\r\n   }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n return{\r\n  submitsearcher: (data)=> dispatch(submitsearcher(data)),\r\n   searcher: (data)=> dispatch(searcher(data)),\r\n   getfilteredSuggestions: (data) => dispatch(getfilteredSuggestions(data))\r\n }\r\n}\r\nexport default compose(withRouter, connect(mapStateToProps,mapDispatchToProps))(Navbar);"]},"metadata":{},"sourceType":"module"}